<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.timelost.hr.dao.PersonalDao">
    <resultMap id="BaseResultMap" type="cn.timelost.hr.pojo.Personal">
        <!--@mbg.generated-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="gender" jdbcType="INTEGER" property="gender"/>
        <result column="birthday" jdbcType="TIMESTAMP" property="birthday"/>
        <result column="phone" jdbcType="BIGINT" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="identity" jdbcType="BIGINT" property="identity"/>
        <result column="education" jdbcType="VARCHAR" property="education"/>
        <result column="school" jdbcType="VARCHAR" property="school"/>
        <result column="img_url" jdbcType="VARCHAR" property="imgUrl"/>
        <result column="work_status" jdbcType="INTEGER" property="workStatus"/>
        <result column="department_id" jdbcType="INTEGER" property="departmentId"/>
        <result column="position_id" jdbcType="INTEGER" property="positionId"/>
        <result column="begin_date" jdbcType="TIMESTAMP" property="beginDate"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, `name`, gender, birthday, phone, email, `identity`, education, school, img_url,
        work_status, department_id, position_id, begin_date, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultType="cn.timelost.hr.vo.PersonalVo">
        <!--@mbg.generated-->
        select p.*,d.department_name,s.position_name
        from personal p
        LEFT JOIN department d
        on p.department_id=d.id
        LEFT JOIN position s
        on p.position_id=s.id
        where p.id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from personal
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.timelost.hr.pojo.Personal"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into personal (`name`, gender, birthday,
        phone, email, `identity`,
        education, school, img_url,
        work_status, department_id, position_id,
        begin_date, create_time, update_time
        )
        values (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{birthday,jdbcType=TIMESTAMP},
        #{phone,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, #{identity,jdbcType=BIGINT},
        #{education,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR},
        #{workStatus,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, #{positionId,jdbcType=INTEGER},
        #{beginDate,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.timelost.hr.pojo.Personal"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into personal
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="identity != null">
                `identity`,
            </if>
            <if test="education != null">
                education,
            </if>
            <if test="school != null">
                school,
            </if>
            <if test="imgUrl != null">
                img_url,
            </if>
            <if test="workStatus != null">
                work_status,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="positionId != null">
                position_id,
            </if>
            <if test="beginDate != null">
                begin_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=BIGINT},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="identity != null">
                #{identity,jdbcType=BIGINT},
            </if>
            <if test="education != null">
                #{education,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                #{school,jdbcType=VARCHAR},
            </if>
            <if test="imgUrl != null">
                #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="workStatus != null">
                #{workStatus,jdbcType=INTEGER},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="positionId != null">
                #{positionId,jdbcType=INTEGER},
            </if>
            <if test="beginDate != null">
                #{beginDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.timelost.hr.pojo.Personal">
        <!--@mbg.generated-->
        update personal
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=BIGINT},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="identity != null">
                `identity` = #{identity,jdbcType=BIGINT},
            </if>
            <if test="education != null">
                education = #{education,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                school = #{school,jdbcType=VARCHAR},
            </if>
            <if test="imgUrl != null">
                img_url = #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="workStatus != null">
                work_status = #{workStatus,jdbcType=INTEGER},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="positionId != null">
                position_id = #{positionId,jdbcType=INTEGER},
            </if>
            <if test="beginDate != null">
                begin_date = #{beginDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.timelost.hr.pojo.Personal">
        <!--@mbg.generated-->
        update personal
        set `name` = #{name,jdbcType=VARCHAR},
        gender = #{gender,jdbcType=INTEGER},
        birthday = #{birthday,jdbcType=TIMESTAMP},
        phone = #{phone,jdbcType=BIGINT},
        email = #{email,jdbcType=VARCHAR},
        `identity` = #{identity,jdbcType=BIGINT},
        education = #{education,jdbcType=VARCHAR},
        school = #{school,jdbcType=VARCHAR},
        img_url = #{imgUrl,jdbcType=VARCHAR},
        work_status = #{workStatus,jdbcType=INTEGER},
        department_id = #{departmentId,jdbcType=INTEGER},
        position_id = #{positionId,jdbcType=INTEGER},
        begin_date = #{beginDate,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectAll" resultType="cn.timelost.hr.vo.PersonalVo">
        select p.*,d.department_name,s.position_name
        FROM personal p LEFT JOIN department d
        on p.department_id=d.id
        LEFT JOIN position s
        on p.position_id=s.id
        <where>
            <if test="departmentId!=0">
                and p.department_id = #{departmentId,jdbcType=NUMERIC}
            </if>
            <if test="personalName!=null">
                and p.name like "%"#{personalName}"%"
            </if>
            <if test="workStatus!=0">
                and p.work_status = #{workStatus,jdbcType=NUMERIC}
            </if>
        </where>
    </select>
    <delete id="deleteByIdIn">
        delete from personal
        where
        id in
        <foreach collection="idList" item="item" open="(" close=")" separator=",">
            #{item,jdbcType=NUMERIC}
        </foreach>
    </delete>
</mapper>